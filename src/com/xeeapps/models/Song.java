package com.xeeapps.models;
// Generated Nov 10, 2013 9:52:17 PM by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Song generated by hbm2java
 */
@Entity
@Table(name="song"
    ,catalog="lyrics_db"
)

@XmlRootElement
@XmlAccessorType(value = XmlAccessType.FIELD)
public class Song  implements java.io.Serializable {


     private Long id;
//      @XmlTransient
     private Artist artist;
     private Album album;
     private String title;
     private String htmlPage;
    @XmlTransient
     private Set<Lyric> lyrics = new HashSet<Lyric>(0);
  

    public Song() {
    }

    public Song(Artist artist, Album album, String title, String htmlPage, Set<Lyric> lyrics) {
       this.artist = artist;
       this.album = album;
       this.title = title;
       this.htmlPage = htmlPage;
       this.lyrics = lyrics;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="artist_id")
    public Artist getArtist() {
        return this.artist;
    }
    
    public void setArtist(Artist artist) {
        this.artist = artist;
    }
@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="album_id")
    public Album getAlbum() {
        return this.album;
    }
    
    public void setAlbum(Album album) {
        this.album = album;
    }
    
    @Column(name="title")
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }
    
    @Column(name="html_page")
    public String getHtmlPage() {
        return this.htmlPage;
    }
    
    public void setHtmlPage(String htmlPage) {
        this.htmlPage = htmlPage;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="song")
    public Set<Lyric> getLyrics() {
        return this.lyrics;
    }
    
    public void setLyrics(Set<Lyric> lyrics) {
        this.lyrics = lyrics;
    }

  


    public static void main(String[] args) throws NoSuchFieldException, IllegalArgumentException, IllegalAccessException {
        Song song = new Song();
        song.setId(123L);
        Object someSong = song;
        System.out.println(someSong.getClass().getDeclaredField("id").get(someSong));
        
        System.out.println(song.getClass());
        
    }

}


