package com.xeeapps.models;
// Generated Nov 10, 2013 9:52:17 PM by Hibernate Tools 3.2.1.GA


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Lyric generated by hbm2java
 */
@Entity
@Table(name="lyric"
    ,catalog="lyrics_db"
)
@XmlRootElement(name = "lyric")
@XmlAccessorType(value = XmlAccessType.FIELD)
public class Lyric  implements java.io.Serializable {


     private Long id;
     private Song song;
     private String words;
       private long views =0L;

    public Lyric() {
    }

    public Lyric(Song song, String words) {
       this.song = song;
       this.words = words;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="song_id")
    public Song getSong() {
        return this.song;
    }
    
    public void setSong(Song song) {
        this.song = song;
    }
    @Lob
    @Column(name="words")
    
    public String getWords() {
        return this.words;
    }
    
    public void setWords(String words) {
        this.words = words;
    }
    
      /**
     * @return the views
     */
     @Column(name="views", nullable = false , columnDefinition = "bigint(20) not null default 0")
    public long getViews() {
        return views;
    }

    /**
     * @param views the views to set
     */
    public void setViews(long views) {
        this.views = views;
    }

    public static void main(String[] args) throws NoSuchFieldException, IllegalArgumentException, IllegalAccessException {
         Song song = new Song();
        song.setId(123L);
        Object someSong = song;
        System.out.println(someSong.getClass().getDeclaredField("id").get(someSong));
        
        System.out.println(song.getClass());
    }


}


